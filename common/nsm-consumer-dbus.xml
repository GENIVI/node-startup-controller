<?xml version="1.0" encoding="UTF-8"?>
<node>
  <!--
    com.contiautomotive.NodeStateManager.Consumer:
    @short_description: Interface for testing the interaction between the
                        Node Startup Controller and the Node State Manager.
                        It is an excerpt of
                        "com.contiautomotive.NodeStateManager.LifecycleControl"
                        using only the methods needed to test the NSC.
  -->
  <interface name="com.contiautomotive.NodeStateManager.Consumer">
    <!--
      RegisterShutdownClient:
      @BusName: Bus name of remote application.
      @ObjName: Object name of remote object that provides the shutdown
                interface
      @ShutdownMode: Shutdown mode for which client wants to be informed
                     (i.e normal, fast etc)
      @TimeoutsMs:  Max. Timeout to wait for response from shutdown client.
      @ErrorCode

      The method is used by other applications to register themselves as
      shutdown client. Any client that registers must provide a method in
      their DBUS object called NSMLifecycleRequest. This method will take one
      parameter which is the Lifecycle Request (i.e. normal shutdown, fast
      shutdown, runup). For an example of the required client interface
      please see the Node Startup Controller, which will be a client of
      the NSM.
    -->
    <method name="RegisterShutdownClient">
      <arg name="BusName" direction="in" type="s"/>
      <arg name="ObjName" direction="in" type="s"/>
      <arg name="ShutdownMode" direction="in" type="i"/>
      <arg name="TimeoutMs" direction="in" type="u"/>
      <arg name="ErrorCode" direction="out" type="i"/>
    </method>

    <!--
      UnRegisterShutdownClient
      @BusName: Bus name of remote application.
      @ObjName: Object name of remote object that provides the shutdown
                interface
      @ShutdownMode: Shutdown mode for which client wants to be informed
                     (i.e normal, fast etc)
      @TimeoutsMs:  Max. Timeout to wait for response from shutdown client.
      @ErrorCode

      The method is used by other applications to unregister themselves as
      shutdown client.
    -->
    <method name="UnRegisterShutdownClient">
      <arg name="BusName" direction="in" type="s"/>
      <arg name="ObjName" direction="in" type="s"/>
      <arg name="ShutdownMode" direction="in" type="i"/>
      <arg name="ErrorCode" direction="out" type="i"/>
    </method>

    <!--
        LifecycleRequestComplete:
        @RequestId: The request Id of the called life cycle client. The value
                    has been passed when "LifecycleRequest" was called.
        @Status:    The result of the call to "LifecycleRequest".
                    NsmErrorStatus_Ok: Request successfully processed.
                    NsmErrorStatus_Error: An error occured while processing
                      the "LifecycleRequest".
        @ErrorCode: Return value passed to the caller, based upon NsmErrorStatus_e.

        The function has to be called asynchrounously by a lifecycle client
        when it has processed an earlier LifecycleRequest.
    -->
    <method name="LifecycleRequestComplete">
      <arg name="RequestId" direction="in" type="u"/>
      <arg name="Status"    direction="in" type="i"/>
      <arg name="ErrorCode" direction="out" type="i"/>
    </method>

  </interface>
</node>
