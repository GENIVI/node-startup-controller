<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
                          "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
]>

<refentry id="test-target-startup-monitoring">
  <refmeta>
    <refentrytitle>Tests for target startup monitoring</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>Tests for target startup monitoring</refname>
    <refpurpose>
      How to verify that the target startup monitoring functionality of the
      NSC correctly identifies targets have started, and sets the node state
      accordingly via the NSM.
    </refpurpose>
  </refnamediv>

  <refsect1>
    <title>Test environment and setup</title>
    <refsect2>
      <title>Target units</title>
      <para>
        This testing requires the existence of focussed.target, unfocussed.target and
        lazy.target units.

        If they do not exist, they can be created by executing the following:
        <programlisting>cp /lib/systemd/system/{graphical,focussed}.target
cp /lib/systemd/system/{graphical,unfocussed}.target
cp /lib/systemd/system/{graphical,lazy}.target</programlisting>
      </para>
    </refsect2>
  </refsect1>

  <refsect1>
    <title>Test cases</title>
    <note>
      The node state is defined by the <link linkend="NSMNodeState">NSMNodeState</link>
      enumeration. When the node state is set, the DLT log refers to it by its number.
    </note>
    <para>
      The following test cases for Target Startup Monitoring are described in this document:
      <itemizedlist>
        <listitem><para><xref linkend="test-tsm-start-nsc" endterm="test-tsm-start-nsc-title"/></para></listitem>
        <listitem><para><xref linkend="test-tsm-start-focussed" endterm="test-tsm-start-focussed-title"/></para></listitem>
        <listitem><para><xref linkend="test-tsm-start-unfocussed" endterm="test-tsm-start-unfocussed-title"/></para></listitem>
        <listitem><para><xref linkend="test-tsm-start-lazy" endterm="test-tsm-start-lazy-title"/></para></listitem>
        <listitem><para><xref linkend="test-tsm-stop" endterm="test-tsm-stop-title"/></para></listitem>
      </itemizedlist>
    </para>
  </refsect1>
  <refsect1 id="test-tsm-start-nsc">
    <title id="test-tsm-start-nsc-title">1. Node state is set to BASE_RUNNING after Node Startup Controller is started</title>
    <refsect2>
      <title>Description</title>
      <para>
        Starts the NSM dummy and the Node Startup Controller and verifies that it attempts
        to set the node state.
      </para>
    </refsect2>
    <refsect2>
      <title>Test commands</title>
      <programlisting>systemctl start nsm-dummy.service
systemctl start node-startup-controller.service</programlisting>
    </refsect2>
    <refsect2>
      <title>Desired behaviour and output</title>
      <para>
        The DLT log should now contain the following log messages:
      </para>
      <informaltable><tgroup cols="3">
        <thead>
          <row> <entry>APID</entry> <entry>CTID</entry> <entry>Payload</entry> </row>
        </thead>
        <tbody>
          <row> <entry>NSMD</entry> <entry>NSMC</entry> <entry>[Applied the node state 2: yes]</entry></row>
        </tbody>
      </tgroup></informaltable>
    </refsect2>
  </refsect1>
  <refsect1 id="test-tsm-start-focussed">
    <title id="test-tsm-start-focussed-title">2. Node state is set to LUC_RUNNING after focussed.target is started</title>
    <refsect2>
      <title>Description</title>
      <para>
        Starts the focussed.target systemd unit and verifies that it attempts to set the
        node state.
      </para>
    </refsect2>
    <refsect2>
      <title>Test commands</title>
      <programlisting>systemctl start focussed.target
systemctl start focussed.target</programlisting>
    </refsect2>
    <note>
      <literal>systemctl start focussed.target</literal> is called twice because the NSM
      dummy rejects every other call to set the node state.
    </note>
    <refsect2>
      <title>Desired behaviour and output</title>
      <para>
        The DLT log should now contain the following log messages:
      </para>
      <informaltable><tgroup cols="3">
        <thead>
          <row> <entry>APID</entry> <entry>CTID</entry> <entry>Payload</entry> </row>
        </thead>
        <tbody>
          <row> <entry>NSMD</entry> <entry>NSMC</entry> <entry>[Applied the node state 3: yes]</entry></row>
        </tbody>
      </tgroup></informaltable>
    </refsect2>
  </refsect1>
  <refsect1 id="test-tsm-start-unfocussed">
    <title id="test-tsm-start-unfocussed-title">3. Node state is set to FULLY_RUNNING after unfocussed.target is started</title>
    <refsect2>
      <title>Description</title>
      <para>
        Starts the unfocussed.target systemd unit and verifies that it attempts to set the
        node state.
      </para>
    </refsect2>
    <refsect2>
      <title>Test commands</title>
      <programlisting>systemctl start unfocussed.target
systemctl start unfocussed.target</programlisting>
    </refsect2>
    <refsect2>
      <title>Desired Behaviour and output</title>
      <para>
        The DLT log should now contain the following log messages:
      </para>
      <informaltable><tgroup cols="3">
        <thead>
          <row> <entry>APID</entry> <entry>CTID</entry> <entry>Payload</entry> </row>
        </thead>
        <tbody>
          <row> <entry>NSMD</entry> <entry>NSMC</entry> <entry>[Applied the node state 4: yes]</entry></row>
        </tbody>
      </tgroup></informaltable>
    </refsect2>
  </refsect1>
  <refsect1 id="test-tsm-start-lazy">
    <title id="test-tsm-start-lazy-title">4. Node state is set to FULLY_OPERATIONAL after lazy.target is started</title>
    <refsect2>
      <title>Description</title>
      <para>
        Starts the lazy.target systemd unit and verifies that it attempts to set the
        node state.
      </para>
    </refsect2>
    <refsect2>
      <title>Test commands</title>
      <programlisting>systemctl start lazy.target
systemctl start lazy.target</programlisting>
    </refsect2>
    <refsect2>
      <title>Desired behaviour and output</title>
      <para>
        The DLT log should now contain the following log messages:
      </para>
      <informaltable><tgroup cols="3">
        <thead>
          <row> <entry>APID</entry> <entry>CTID</entry> <entry>Payload</entry> </row>
        </thead>
        <tbody>
          <row> <entry>NSMD</entry> <entry>NSMC</entry> <entry>[Applied the node state 5: yes]</entry></row>
        </tbody>
      </tgroup></informaltable>
    </refsect2>
  </refsect1>
  <refsect1 id="test-tsm-stop">
    <title id="test-tsm-stop-title">5. Stopping a target unit will not try to change the node state</title>
    <refsect2>
      <title>Description</title>
      <para>
        Stops a systemd unit and verifies that the Node Startup Controller doesn't try to
        set the node state.
      </para>
    </refsect2>
    <refsect2>
      <title>Test commands</title>
      <programlisting>systemctl stop focussed.target</programlisting>
    </refsect2>
    <refsect2>
      <title>Desired behaviour and output</title>
       <para>
        The DLT log should now contain the following log messages:
      </para>
      <informaltable><tgroup cols="3">
        <thead>
          <row> <entry>APID</entry> <entry>CTID</entry> <entry>Payload</entry> </row>
        </thead>
        <tbody>
          <row> <entry>NSC-</entry> <entry>CTRL</entry> <entry>[Creating D-Bus proxy for unit "/org/freedesktop/systemd1/unit/focussed_2etarget"]</entry></row>
          <row> <entry>NSC-</entry> <entry>CTRL</entry> <entry>[Active state of unit "focussed.target" changed to inactive]</entry></row>
        </tbody>
      </tgroup></informaltable>
      <para>
        The DLT log should <emphasis>not</emphasis> contain the following log message:
      </para>
      <informaltable><tgroup cols="3">
        <thead>
          <row> <entry>APID</entry> <entry>CTID</entry> <entry>Payload</entry> </row>
        </thead>
        <tbody>
          <row> <entry>NSMD</entry> <entry>NSMC</entry> <entry>[Applied the node state 3: yes]</entry></row>
        </tbody>
      </tgroup></informaltable>
      <para>
        or
      </para>
      <informaltable><tgroup cols="3">
        <thead>
          <row> <entry>APID</entry> <entry>CTID</entry> <entry>Payload</entry> </row>
        </thead>
        <tbody>
          <row> <entry>NSMD</entry> <entry>NSMC</entry> <entry>[Applied the node state 3: no]</entry></row>
        </tbody>
      </tgroup></informaltable>
    </refsect2>
  </refsect1>

</refentry>
